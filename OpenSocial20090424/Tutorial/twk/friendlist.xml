<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs
            title="List Friends Example"
            description="desc">
        <Require feature="opensocial-0.8" />
        <Require feature="dynamic-height" />
        
    </ModulePrefs>
    <Content type="html" view="home,profile,canvas"><![CDATA[<script type="text/javascript">
    if (typeof console == 'undefined') {
    	this.console = {
    		// debug:alert
    		debug:function(){}
    		, error:alert
    	};
    }
    
    function GetSupportedFields()
    {
		var env = opensocial.getEnvironment();
		
		var objectType = opensocial.Environment.ObjectType.PERSON;
		
		var fields = [];
		for(fieldName in opensocial.Person.Field)
		{
			if (env.supportsField(objectType, opensocial.Person.Field[fieldName]))
			{
				// alert(fieldName);
				fields.push(opensocial.Person.Field[fieldName]);
			}
		}
		
		return fields;
    }
    
      /**
       * Request the OWNER and OWNER's friends.
       */
      function request() {
      try{
		var env = opensocial.getEnvironment();
		
		var html = '';
		html += 'domain is :' + env.getDomain() + '<br />';

/*
		var allFields = [];
		for(fieldName in opensocial.Person.Field)
		{
			// html += fieldName + '<br />';
			allFields.push(opensocial.Person.Field[fieldName]);
		}
		
		var html = '';
		
		var objectType = opensocial.Environment.ObjectType.PERSON;
		html += 'objectType:' + 'PERSON<br />'; 
		for (fieldName in opensocial.Person.Field)
		{
			html += 'fieldName ' + fieldName + ' is supported? : ' 
				+ env.supportsField(objectType, opensocial.Person.Field[fieldName]) + '<br />';
		}
        document.getElementById('message').innerHTML += html;
*/
      
        var idspec = opensocial.newIdSpec({ "userId" : "OWNER", "groupId" : "FRIENDS" });
        var req = opensocial.newDataRequest();
        var params = {}; 
		params[opensocial.DataRequest.PeopleRequestFields.PROFILE_DETAILS]
[opensocial.Person.Field.GENDER,
 opensocial.Person.Field.DATE_OF_BIRTH

];  
//			= GetSupportedFields();
        req.add(req.newFetchPersonRequest(opensocial.IdSpec.PersonId.OWNER, params), "get_owner");
        req.add(req.newFetchPeopleRequest(idspec, params), "get_friends");
        req.send(response);
      }catch(e){
      	console.error(e.message);
      }
      	return;


      /**
       * Parses the response and generates html to list the names of the owner and
       * his or her friends.
       *
       * @param {Object} dataResponse Friend information that was requested.
       */
      function response(dataResponse) {
      try {
        var owner = dataResponse.get('get_owner').getData();
        /* @var owner Map< PersonId, Map<String, Object>> */
        var friends = dataResponse.get('get_friends').getData();
        /* @var friends Collection<Person> */ 
        
        var html = '';
        html += owner.getDisplayName() + 'の友達は' + friends.size() + '人です';
        html += ':<br><ul>';
        
        friends.each(function(person) {
          console.debug(person);
          /* @var person Person */
          html += '<li>' + person.getDisplayName() + '<br />';
          html += 'id:' + person.getId();
          html += 'isOwner:' + person.isOwner();
          html += 'isViewer:' + person.isViewer();
          
			for(i in opensocial.Person.Field){
				var env = opensocial.getEnvironment();
				var objectType = opensocial.Environment.ObjectType.PERSON;
				if (!env.supportsField(objectType, opensocial.Person.Field[i]))
					continue;
			
				html += i;
				if(i == "THUMBNAIL_URL"){
					html+="<img src='"+person.getField(opensocial.Person.Field[i]) +"'></img>";
				}else{
					html+= person.getField(opensocial.Person.Field[i]);
				}
				html += '<br />';
			}
	          html += '</li>';
	
	        html += '</ul>';
	        
	        document.getElementById('message').innerHTML += html;
	        
      }); // each
     
        // gadgets.window.adjustHeight();
     
      
      } catch(e) {
      	console.error(e.message);
     }
     
     } // response
      
      } // request

      // Execute the request function when the application is finished loading.
      gadgets.util.registerOnLoadHandler(request);
    </script>
    <div id="message" style="height: 160px; overflow:scroll;"> </div>]]></Content>
</Module>