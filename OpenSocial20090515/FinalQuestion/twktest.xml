<?xml version="1.0" encoding="UTF-8" ?>  
<Module>  
<ModulePrefs title="FinalQuestion" height="800"
	description="Final Question">
	<Require feature="opensocial-0.8"/>
	<Require feature="dynamic-height"/>
	<Require feature="tabs"/>
	<Require feature="settitle"/>
	<Require feature="minimessage"/>
</ModulePrefs>

<Content type="html" view="profile,home,canvas"><![CDATA[ 
<!--
-->
<script type="text/javascript" src="js/json_sans_eval.js"></script>
<script type="text/javascript" src="js/jquery-1.3.2.min.js"></script>
<script type="text/javascript" src="js/opensocial-jquery.rev427.js"></script>
<script type="text/javascript" src="js/jsdeferred.jquery.js"></script>
<script type="text/javascript">
// @see http://la.ma.la/blog/diary_200608300350.htm
Array.prototype.shuffle = function() {
    var i = this.length;
    while(i){
        var j = Math.floor(Math.random()*i);
        var t = this[--i];
        this[i] = this[j];
        this[j] = t;
    }
    return this;
}

jQuery(function($) {
});
</script>
]]></Content>

<Content type="html" view="home">
  <![CDATA[ 
<script type="text/javascript">
</script>
   <p>ここはhome!!</p>
  ]]>  
</Content>

<Content type="html" view="profile">
  <![CDATA[ 
  ]]>  
</Content><!-- profile -->

<Content type="html" view="canvas"><![CDATA[ 
<script>document.write('<link rel="stylesheet" href="http://hackathon-jp.googlecode.com/svn/trunk/OpenSocial20090515/FinalQuestion/katsube.css?rand=' + Math.random() + '" type="text/css" />');</script>
<style type="text/css">
#battleField { display: none; }
#quizArea { border: solid 1px; }
.answer { width: display: none; cursor: default; }
#exit { cursor: default; }
#question { border: solid 1px; }
.badgeJudge { display: none; position: absolute; top: 0px; left: 0px;} 
.fqMiniMessage { color: red; }
</style>
		<h1>FinalQuestion</h1>

		<!-- [メイン画面] -->
		<div id="main"></div>

		<!-- [メニュー] -->
		<div id="mainmenu" style="display:none">
			<div id="mainmenu-in">
				<ul id="menulist">
					<li id="battle">バトル</li>
					<li id="castle">城</li>
					<li id="item">アイテム</li>
				</ul>
				<div id="status" style="clear:both"></div>
			</div>
		</div>
		<!-- [/メニュー] -->

		<script type="text/javascript">
			/*----------------------------------------------------
			 * ■メインメニュー
			 *----------------------------------------------------*/
			var MainMenu = {
				//------------------------------
				//HTMLのIDリスト
				//------------------------------
				'id':{
					  'canvas':'#main'
					,   'menu':'#mainmenu'
					
					, 'battleField':'#battleField'

					, 'battle':'#battle'
					, 'castle':'#castle'
					,   'item':'#item'
				}

				//------------------------------
				//初期化(onLoad時に呼び出し)
				//------------------------------
				, 'init' : function(){
					//メニュー表示
					MainMenu.disp(
						  MainMenu.id.canvas
						, MainMenu.id.menu
					);
					
					//イベント設定
					$(MainMenu.id.battle).click( Battle.start );
					$(MainMenu.id.castle).click( Castle.start );
					$(MainMenu.id.item).click( Item.start );
					
				}

				//------------------------------
				//メニュー表示
				//------------------------------
				, 'disp' : function(canvas, menu){
					var source = $(menu).html();
					$(canvas).html(source);
				}
			};

			/*----------------------------------------------------
			 * ■ステータス
			 *----------------------------------------------------*/
			 var Status = {
				//------------------------------
				//HTMLのIDリスト
				//------------------------------
				'id': '#status'

				//------------------------------
				//ステータスに表示
				//------------------------------
				, 'write':function(msg){
					$(Status.id).html(msg);
				}
			 };

			/*----------------------------------------------------
			 * ■バトルスタート
			 *----------------------------------------------------*/
			 var Battle = {
				'start':function(){
					MainMenu.disp(
						  MainMenu.id.canvas
						, MainMenu.id.battleField
					);
					FinalQuestion.startBattle();
				}
			 };
			 
			/*----------------------------------------------------
			 * ■城
			 *----------------------------------------------------*/
			 var Castle = {
				'start':function(){
					alert('castle start');
					
				}
			 };
			 
			/*----------------------------------------------------
			 * ■アイテム
			 *----------------------------------------------------*/
			 var Item = {
				'start':function(){
					alert('item start');
				}
			 };
			
			/*----------------------------------------------------
			 * ■onLoad イベントハンドラ
			 *----------------------------------------------------*/
			gadgets.util.registerOnLoadHandler(function(){
				//メニュー表示
				MainMenu.init();
				
				//ステータス更新
				Status.write('Final Questionへようこそ');
				
				//高さ変更
				//gadgets.window.adjustHeight();
			});
		</script>


<script type="text/javascript">
// 岩崎作成部分
//jQuery(function($) {
	// 定数的なもの
	var loadQuizzesUrl = 'http://quizken.jp/quiz/index/api_key/20090515finalquestion/count/1';
	// [{"question_key":"eyJkIjoiNFFDQlkwQ3Y2WmM9In0","question":"\u4eba\u6c17\u306e\u713c\u914e\u300c\u3044\u3044\u3061\u3053\u300d\u306e\u7523\u5730\u306f?","genre_name":"variety","answers":["\u5927\u5206\u770c","\u798f\u5ca1\u770c","\u5bae\u5d0e\u770c","\u9e7f\u5150\u5cf6\u770c"]}]
//	var answerQuizUrl = 'http://quizken.jp/quiz/index/api_key/20090515finalquestion/question_key/eyJkIjoiSjh5WHZJdGxzYXM9In0/answer/%C3%97';
	var scoreRankingUrl = 'http://labs.spicebox.jp/final_question/users/';
	var addScoreUrlFormat = 'http://labs.spicebox.jp/final_question/users/add/{$mixiId}/{$score}/{$items}/{$deathCount}/{$clearCount}';
	var getScoreUrlFormat = 'http://labs.spicebox.jp/final_question/users/get/{$mixiId}/';
	var maxAnswerCount = 4; // クイズの選択肢の数
	
	// main
	var bossHitPoint = 2;
	var hitPoint = 1;
	var quizzes = null;
	var correctAnswer = null;
	// class
	var FinalQuestion = {
		_viewer: null
		, init: function(){
			$.deferred.define();
			$.get('/people/@viewer/@self', {}, function(people) {
				// console.debug(people);
				var viewer = people[0];
				FinalQuestion._viewer = viewer;
				
				var getScoreUrl = getScoreUrlFormat.replace('{$mixiId}', FinalQuestion.getViewerMixiId()); 
				FinalQuestion.makeOuterRequest(getScoreUrl, function(response){
					var scores = response.text.split(',');
					console.debug(scores);
					scores.shift();
					FinalQuestion._scores = scores; 
				});
			}, 'data');
			
			FinalQuestion.init = null;
		}
		, startBattle: function (){
			if (FinalQuestion.init)
				FinalQuestion.init();

			$.post('/activities/@viewer/@self', { 
				title: '【FinalQuestion】' + FinalQuestion.getViewerName() + 'がバトル中です。' 
			}, function() {}, 'data');
	
			$('#exit').click(FinalQuestion.exit);
	
			for (var i = 0; i < maxAnswerCount; ++i)
			{
				$('#answer' + i).click(FinalQuestion.answer);
			}
			FinalQuestion.loadNextQuiz();
		}
		/* タイミングが悪いと */
		, getViewer: function(){
			return FinalQuestion._viewer || {};
		}
		, getViewerMixiId: function(){
			var viewer = FinalQuestion.getViewer();
			if (!viewer)
				return 0;
			
			var idWithSession = viewer.id.replace("mixi.jp:","");
			// console.debug(idWithSession);
			return idWithSession.substr(0, idWithSession.length - 40);
		}
		, getViewerName: function(){
			if (FinalQuestion._viewer)
				return FinalQuestion._viewer.nickname;
			else
				return 'あなた';
		}
		, exit: function(){
			var confirmMessage = FinalQuestion.getViewerName() + 'さま、酒場に逃げ帰るというのですか？';
			if (!confirm(confirmMessage))
				return;
			
			MainMenu.init();
		} // exit
		, gotoMenu : function() {
			MainMenu.disp(
				  MainMenu.id.canvas
				, MainMenu.id.menu
			);
		}
		, loadQuizzes: function (callback){
			FinalQuestion.makeOuterRequest(loadQuizzesUrl, callback);
		}
		, loadNextQuiz: function (){
			FinalQuestion.loadQuizzes(function(response) {
				quizzes = jsonParse(response.text);
				// console.debug(quizzes);
				var quiz = quizzes[0];
				// console.debug(quiz.question);
				
				$('#question').text(quiz.question);
				correctAnswer = quiz.answers[0];
				var shuffledAnswers = quiz.quiz_type == 'truefalse' ? ['○', '×'] : quiz.answers.shuffle();
				$.each(shuffledAnswers, function(index, answer){
					var answer$ = $('#answer' + index);
					answer$.text(answer);
				});
				for (var i = 0; i < maxAnswerCount; ++i){
					$('#answer' + i)[i < shuffledAnswers.length ? 'show' : 'hide']();
				}
			});
		}
		, answer: function (){
			// console.debug($(this));
			var isCorrect = correctAnswer == $(this).text(); 
			var image$ = $(isCorrect ? '#badgeJudgeCorrect' : '#badgeJudgeWrong');
			image$.show().hide('slow');

			// TODO スコアを送信?
			var message = '';
			if (isCorrect)
			{
				--bossHitPoint;
				if (bossHitPoint == 0)
					message = '会心の一撃！';
				else if (bossHitPoint < 3)
					message = '敵も弱ってきたようだ。これでもか！';
			}
			else
			{
				--hitPoint;
				if (hitPoint == 1)
					message = 'ぐは！痛恨の一撃・・・';
				else if (hitPoint == 0)
					message = '意識が朦朧としてきた・・・';
				else
					message = 'やられた。けどまだまだー！';
			}
			
			if (message)
			{
//				$('<span class="fqMiniMessage" />').text(message).minimessage(function(){}, 1);
				/*
				var o$ = $('<span class="fqMiniMessage" />').text(message);
      if (o$.parentNode)
        o$.parentNode.removeChild(o$);
			      new gadgets.MiniMessage().createTimerMessage(o$, 1);
			     */
				alert(message);
			}			

			if (bossHitPoint == 0)
				FinalQuestion.win();
			else if (hitPoint == 0)
				FinalQuestion.die();
			else
				FinalQuestion.loadNextQuiz();
		}
		, getScore: function(){
			return FinalQuestion._scores[1] || 0;
		}
		, getItems: function(){
			return FinalQuestion._scores[2] || '';
		}
		, getDeathCount: function(){
			return FinalQuestion._scores[3] || 0;
		}
		, getClearCount: function(){
			return FinalQuestion._scores[4] || 0;
		}
		, addScore: function(value){
			FinalQuestion._scores[1] = FinalQuestion.getScore() + value;
			return FinalQuestion.getScore();
		}
		, incDeathCount: function(){
			FinalQuestion._scores[3] = FinalQuestion.getDeathCount() + 1;
			return FinalQuestion.getDeathCount();
		}
		, incClearCount: function(){
			FinalQuestion._scores[4] = FinalQuestion.getClearCount() + 1;
			return FinalQuestion.getClearCount();
		}
		, makeOuterRequest: function(url, callback){
			// alert(url);
			console.debug('makeRequest to ' + url);
			var params = {};
			params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.SIGNED;
			gadgets.io.makeRequest(url, callback, params);
		}
		, win: function(){
			var addScoreUrl = addScoreUrlFormat.replace('{$mixiId}', FinalQuestion.getViewerMixiId())
				.replace('{$score}', FinalQuestion.addScore(1))
				.replace('{$items}', FinalQuestion.getItems())
				.replace('{$deathCount}', FinalQuestion.incDeathCount())
				.replace('{$clearCount}', FinalQuestion.getClearCount());

			FinalQuestion.makeOuterRequest(addScoreUrl, f);
			
			function f(){
				// 城に移動する
				$.deferred.wait(1.5).next(function(){
					alert('ボスがゆっくりとくずれ落ちていく・・・');
				}).wait(1.5).next(function(){
					alert('あなたの勝利です！「魅惑のスイーツ」を手に入れました。城へ急ぎましょう。');
					FinalQuestion.gotoMenu();
				});
			}
		}
		, die: function(){
			$.deferred.next(function(){
				var addScoreUrl = addScoreUrlFormat.replace('{$mixiId}', FinalQuestion.getViewerMixiId())
					.replace('{$score}', FinalQuestion.getScore())
					.replace('{$items}', FinalQuestion.getItems())
					.replace('{$deathCount}', FinalQuestion.incDeathCount())
					.replace('{$clearCount}', FinalQuestion.getClearCount());
				FinalQuestion.makeOuterRequest(addScoreUrl, f);
			});
			
			function f(response){
				// console.debug(response);

				$.post('/activities/@viewer/@self', { 
					title: '【FinalQuestion】' + FinalQuestion.getViewerName() + 'は死にました。なさけない。' 
				}, function() {}, 'data');
				
				$.deferred.wait(1).next(function(){
					var message = '勇者' + FinalQuestion.getViewerName() + 'は死にました・・・';
					alert(message);
					FinalQuestion.gotoMenu();
				});
			} 
		}
	}; // FinalQuestion object
	
//	FinalQuestion.startBattle();
//}); // jQuery
</script>
<div id="battleField">
	<div id="quizArea" style="position: relative;">
		<div id="question">question_area</div>
		<div id="answer0" class="answer">answe0</div>
		<div id="answer1" class="answer">answe0</div>
		<div id="answer2" class="answer">answe0</div>
		<div id="answer3" class="answer">answe0</div>
		<div class="badgeJudge" id="badgeJudgeCorrect"><img src="images/correct.png" alt="○" /></div>
		<div class="badgeJudge" id="badgeJudgeWrong"><img src="images/wrong.png" alt="×" /></div>
	</div>
	<div id="exit">酒場に戻る</div>
</div>
]]></Content><!-- /canvas -->

<Content type="html" view="profile,home,canvas"><![CDATA[ 
<script type="text/javascript">
</script>
]]></Content> 

</Module>
