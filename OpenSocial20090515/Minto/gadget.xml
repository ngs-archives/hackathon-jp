<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="みんと～" author_email="kentaro.matsumae@gmail.com">
    <Require feature="opensocial-0.8" />
    <Require feature="dynamic-height" />
  </ModulePrefs>
  <Content type="html" view="canvas"><![CDATA[

<!-- Fetching People and Friends -->
<div>
	<div>
		<span id="notice"></span>
	</div>
	<div>
		<form>
			メッセージ:
			<input type="text" name="message" id="message" size="75">
  			<button type="submit" onclick='postMsg(); return false;'>投稿</button>
  		</form>
  	</div>
  	<div>
  		<h2>私の投稿</h2>
  		
  	</div>
</div>
<script type='text/javascript'>
function postMsg() {
	var msg = document.getElementById('message').value;
    var request = opensocial.newDataRequest();
    var param = {};
    param[opensocial.IdSpec.Field.USER_ID] = opensocial.IdSpec.PersonId.VIEWER;
    var viewer = opensocial.newIdSpec(param);
    request.add(request.newFetchPeopleRequest(viewer), "viewer");
    request.send(function (response) {
        var item = response.get("viewer");
        if (item.hadError()) {
            // エラー処理。item.getError() で詳細情報を取得
            return;
        }
        var people = item.getData();
        var person = people.asArray()[0];
        var uid = person.getId();
        var date = new Date();
        contentID = uid + date.getTime();
        var inData = {"contentID": contentID, "body": msg };
        getData("contents", inData);
	});
}
function getData(key, inData){
    var request = opensocial.newDataRequest();
    var param = {};
    request.add(request.newFetchPersonRequest(opensocial.IdSpec.PersonId.VIEWER), "viewer");
    param[opensocial.IdSpec.Field.USER_ID] = opensocial.IdSpec.PersonId.VIEWER;
    var idSpec = opensocial.newIdSpec(param);
    request.add(request.newFetchPersonAppDataRequest(idSpec, [key]), "viewer_data");
    request.send(function (response) {
        if (response.hadError()) {
            return;
        }
        var viewer = response.get("viewer").getData();
        var data   = response.get("viewer_data").getData();
        var viewer_data = data[viewer.getId()];
        
        var allContents = null;
        if(viewer_data == null){
        	allContents = [];
        }else{
        	var jsonTxt =  gadgets.util.unescapeString(viewer_data[key]);
        	allContents  = gadgets.json.parse(jsonTxt);
        }
        allContents.push(inData);
        
        var value = gadgets.json.stringify(allContents);
        insertData("contents", value);
    });
}
function insertData(key, value){
	var request = opensocial.newDataRequest();
    request.add(request.newUpdatePersonAppDataRequest(
            opensocial.IdSpec.PersonId.VIEWER, key, value));
    request.send();
    
    var notice = document.getElementById('notice');
    notice.innerHTML = "投稿しました！";
}
</script>

  ]]></Content>

 <Content type="html" view="home,profile"><![CDATA[
		<script src="http://ajax.googleapis.com/ajax/libs/prototype/1.6.0.3/prototype.js"></script>
		<script src="http://hackathon-jp.googlecode.com/svn/trunk/OpenSocial20090515/Minto/js/effect.js"></script>

		<style type="text/css">
			#contentBody {
				width: 200px;
				height: 30px;
				overflow: hidden;
				margin: 0px;
				padding: 0px;
				background-color: #FFC;
			}
			
			.content {
				position:relative;
				text-align:center;
				width: 200px;
				height: 30px;
			}
			
			#contentRight {
				top: -28px;
				left: 200px;
			}
		</style>

		<div><span id="ownerName"></span>さんの友達の投稿</div>
		<div id="prevButton"><a href="javascript:void(0);" onclick="prevContent()">前へ</a></div>
		<div id="contentBody">
			<div id="contentLeft" class="content"></div>
			<div id="contentRight" class="content"></div>
		</div>
		<div id="nextButton"><a href="javascript:void(0);" onclick="nextContent()">次へ</a></div>
		<div id="rateButton">評価する</div>
		<div id="rate">星</div>

		<div id="Error"></div>
		<script type="text/javascript">
			var contents;
			var no = 0;
 			
			function showMyContent(r) {
				contents = r[0];
				var request = opensocial.newDataRequest();
				request.add(request.newFetchPersonRequest(opensocial.IdSpec.PersonId.VIEWER),"viewer_data");
	 
				request.send(function (response) {
					var item = response.get("viewer_data");
					if (item.hadError()) {
						// エラー処理。item.getError() で詳細情報を取得
						$('Error').update(item.getError());
						return;
					}
	
					// 実行ユーザのプロフィールを参照
					var person = item.getData();
					var nickname = person.getDisplayName();
					
					$('ownerName').update(nickname);
					
					$('contentLeft').update(contents[no]['body']);
				});
			}

			
			function nextContent() {
				no += 1;
				
				$('contentLeft').update($('contentRight').innerHTML);
				$('contentRight').update(contents[no]['body']);
				effectNextContent();
				
				$('prevButton').show();	
				
				if (contents.length == (no + 1)) {
					$('nextButton').hide();
				}
			}
 
 			function prevContent() {
				no = no - 1;

				$('contentLeft').update(contents[no]['body']);
				effectPrevContent();
				
				if (no <= 0) {
					//$('prevButton').hide();	
				}
			}
			
			var width = $('contentBody').getWidth();	
			var duration = 1;
			var fps = 15;

			function effectPrevContent() {
				var leftLeft = $('contentLeft').getStyle("left");
				var rightLeft = $('contentRight').getStyle("left");
				
				return new Effect.Tween(null, 0, width,
					{
						duration: duration,
						fps : fps,
						afterFinish: function() {
						}
					},
					function(pt) {
						pt = pt.round();
						
						$('contentLeft').setStyle({ left: (leftLeft + pt) + 'px' });
						$('contentRight').setStyle({ left: (rightLeft + pt) + 'px' });
					}
				);
			}
  
			function effectNextContent() {
				return new Effect.Tween(null, 0, width,
					{
						duration: duration,
						fps : fps,
						afterFinish: function() {
						}
					},
					function(pt) {
						pt = pt.round();
						
						$('contentLeft').setStyle({ left: (0 - pt) + 'px' });
						$('contentRight').setStyle({ left: (width - pt) + 'px' });
					}
				);
			}

///////////////
//
// 友達の投稿を取得する
//
function getMyFriendContents(callback){
	var key = "contents";
    var request = opensocial.newDataRequest();
    var param = {};
    param[opensocial.IdSpec.Field.USER_ID] = opensocial.IdSpec.PersonId.VIEWER;
    param[opensocial.IdSpec.Field.GROUP_ID] = "FRIENDS";
    var idSpec = opensocial.newIdSpec(param);
    request.add(request.newFetchPeopleRequest(idSpec), "friends_data");
   	request.send(function (response) {
		var item = response.get("friends_data");
		if (item.hadError()) {
		    alert("err");
		    return;
		}
		var people = item.getData();
		var friendIdList = [];
		people.each(function (person) {
		    var fid = person.getId();
		    friendIdList.push(fid);
		});
		getFriendsContents(friendIdList, callback);
    });
}
function getFriendsContents(friendIdList, callback) {
	var request = opensocial.newDataRequest();
    var params = [];
    params[opensocial.IdSpec.Field.USER_ID] = opensocial.IdSpec.PersonId.VIEWER;
    params[opensocial.IdSpec.Field.GROUP_ID] = "FRIENDS";
    var idSpec = opensocial.newIdSpec(params); 
    request.add(request.newFetchPersonAppDataRequest(idSpec, ["contents"]), "viewer_data");
    request.send(function (response) {
        if (response.hadError()) {
        	alert(response.getErrorMessage());
            return;
        }
        var data = response.get("viewer_data").getData();
        
        for (var property in data){
 			//alert(property + ' = ' + data[property])
 		}
 		
 		var result = [];
 		for(var i=0; i<friendIdList.length; i++){
        	var fid = friendIdList[i];
        	var contents = data[fid];
        	if(contents){
        		var fContents = contents["contents"];
        	    var jsonTxt =  gadgets.util.unescapeString(fContents);
        		allContents  = gadgets.json.parse(jsonTxt);
        		result.push(allContents);
        	}
        }
        callback(result);
    });
}

///////////////
  
			//gadgets.util.registerOnLoadHandler(getMyFriendContents(function(r){showMyContent(r)}));
			gadgets.util.registerOnLoadHandler(
				getMyFriendContents(
					function(r){
						showMyContent(r);
					}
				)
			);
			
  		</script>

  ]]></Content>

</Module>
