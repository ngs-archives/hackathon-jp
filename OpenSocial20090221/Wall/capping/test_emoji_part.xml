<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="絵文字化">
    <Require feature="opensocial-0.7"/>
  </ModulePrefs>
  <Content type="html">
  <![CDATA[

	<form name="escform" action="" method="get">
		<textarea name="org_str" id="org_str"></textarea>
	</form>
<div id="emojica_text">
</div>
		<input type="button" name="escbtn" id="escbtn" value="絵文字化" onclick="emojica_by_js()" />
		<input type="button" name="escbtn" id="escbtn" value="絵文字化クリア" onclick='document.getElementById("emojica_text").innerHTML=""' />
		<input type="button" name="escbtn" id="escbtn" value="debug_json確認" onclick="run()" />
		<input type="button" name="escbtn" id="escbtn" value="debugクリア" onclick='document.getElementById("debug_str").innerHTML=""' />
<div id="debug_str">
</div>
<div id="info">
<a href="http://emojica.com/appendixes/json/2" target="_new">json</a>
<a href="http://start.typepad.jp/typecast/" target="_new">利用している絵文字２</a>
</div>

<script type="text/javascript" src="http://emojica.com/appendixes/json/2"></script>
<script type="text/javascript">
	var emoji_domain = "http://emojica.com";
	var url = emoji_domain+"/appendixes/json";
	document.getElementById('org_str').value = Emojica.sample;
	var img_dir = emoji_domain+Emojica.img_dir;
//json/1の場合
//	var img_dir = "	http://emojica.com/img/e_simple/";
//json/2の場合
//	var img_dir = "	";
function emojica() {
	var params = {};
	params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
	// This URL returns a JSON-encoded string that represents a JavaScript
	// object
	gadgets.io.makeRequest(url, response, params);
};

function response(obj) {
	var html;
	var jsondata = obj.data;

	// var html = "<strong>Values: </strong><br /><br />";
	// Returned JS object can be processed as an associative array
	// emojica_str = org_str;
	emojica_str = document.getElementById('org_str').value;
	for (var key in jsondata) {
		for (var word in jsondata[key]) {
			var item = jsondata[key][word];
			image_bracket = "<img src=\"" + img_dir + jsondata[key][word]
					+ "\">";
			emojica_str = emojica_str.replace(word, image_bracket);
		}
	}
	// html += "<br />";
	html += emojica_str;
	document.getElementById('emojica_text').innerHTML = html;
};

function emojica_by_js() {
	var html = '';
	emojica_str = document.getElementById('org_str').value;
	for (var i = 0; i < Emojica.dictionary.length; i++) {
		image_bracket = "<img src=\"" + img_dir
				+ Emojica.dictionary[i].pc_files.file_name + "\">";
		emojica_str = emojica_str.replace(Emojica.dictionary[i].words.word,
				image_bracket);
	}
	html += emojica_str;
	document.getElementById('emojica_text').innerHTML = html;
}

function clear() {
	delNode('debug_str');
	delNode('emojica_text');
}

function delNode(s) {
	ob = document.getElementById(s);
	ob.innerHTML = '';
	ob.value = '';
	while (ob.hasChildNodes) {
		ob.removeChild(ob.firstChild);
	}
}

/* JSON受信 */
function run() {
	// trace(url + " からJSON受信");
	var max = 10;
	
	trace(Emojica.sample + "=>サンプル文字列");
	trace("<br />");
	
	trace(Emojica.dictionary.length + "件受信(のうち" + max + "まで)");
	trace("<br />");
	// 全件やると固まる
	// for (var i = 0; i < Emojica.dictionary.length; i++) {
	for (var i = 0; i < max; i++) {
		trace("word: " + Emojica.dictionary[i].words.word);
		trace(",");
		trace("file_name: " + Emojica.dictionary[i].pc_files.file_name);
		trace("<br />");
	}
}
/* デバッグ用 */
function trace(str) {
	// alert(str);
	debug = document.getElementById('debug_str');
	debug.innerHTML = debug.innerHTML + str;
}
</script>

  ]]>
  </Content>
</Module>