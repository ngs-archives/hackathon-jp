<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
    layout="absolute"
    creationComplete="onCreationComplete()"
    backgroundAlpha="0" backgroundColor="#FFFFFF">

    <mx:Script>
    <![CDATA[
    import mx.containers.Panel;
    import mx.controls.Alert;
    import flash.external.*;
    import mx.collections.ArrayCollection;

    [Bindable]
    public var dataTypes:ArrayCollection = new ArrayCollection([
        {label:"Owner", data:1},
        {label:"Viewer", data:2},
        {label:"Test", data:3}
    ]);

    private function onCreationComplete():void {
        //allow cross domain calls
        flash.system.Security.allowDomain("api.msappspace.com");

        if(ExternalInterface.available) {
            try {
                //Set up Javascript to Actionscript calls
                var methodName:String = "setViewer";
                var method:Function = setViewer;
                ExternalInterface.addCallback(methodName, method);

                methodName = "setOwner";
                method = setOwner;
                ExternalInterface.addCallback(methodName, method);

                methodName = "setSaveSoundResult";
                method = setSaveSoundResult;
                ExternalInterface.addCallback(methodName, method);

                methodName = "setAddSoundResult";
                method = setAddSoundResult;
                ExternalInterface.addCallback(methodName, method);

                methodName = "setClearSoundResult";
                method = setClearSoundResult;
                ExternalInterface.addCallback(methodName, method);

                methodName = "setGetSoundCollectionResult";
                method = setGetSoundCollectionResult;
                ExternalInterface.addCallback(methodName, method);

                ExternalInterface.call("getOwner");
            } catch (error:Error) {
                Alert.show("An Error occurred: " + error.message + "\n");
            }
        }
        //Setup button events
        btnSend.addEventListener(MouseEvent.CLICK, sendMessage);
        btnReset.addEventListener(MouseEvent.CLICK, resetForm);
        btnSave.addEventListener(MouseEvent.CLICK, saveSound);
        btnAdd.addEventListener(MouseEvent.CLICK, addSound);
        btnClear.addEventListener(MouseEvent.CLICK, clearSound);
        btnSoundCollection.addEventListener(MouseEvent.CLICK, getSoundCollection);
    }

    public function setViewer(returnData:Object):void {
//        p1.visible = false;
//        p2.visible = true;
        var output:String = "Viewer:\n";
        returnDataArea.text = "Viewer:\n" + getOutput(returnData.viewer);
        if (returnData.viewer) {
            thumbnail.source =  returnData.viewer.thumbnailUrl;
            message.text = message.text + "\n" + "viewer found.";
        } else {
            message.text = message.text + "\n" + "viewer not found.";
            if (returnData.result && !returnData.result.success) {
                message.text = message.text + "\n" + returnData.result.message;
            }
        }
    }

    public function setOwner(returnData:Object):void {
//        p1.visible = false;
//        p2.visible = true;
        returnDataArea.text = "Owner:\n" + getOutput(returnData.owner);
        if (returnData.owner && returnData.owner.sound) {
            foo.text = returnData.owner.sound;
            message.text = message.text + "\n" + "sound found.";
        } else {
            foo.text = "";
            message.text = message.text + "\n" + "no sound found.";
        }
        if (returnData.owner) {
            thumbnail.source =  returnData.owner.thumbnailUrl;
            message.text = message.text + "\n" + "owner found.";
        } else {
            message.text = message.text + "\n" + "owner not found.";
            if (returnData.result && !returnData.result.success) {
                message.text = message.text + "\n" + returnData.result.message;
            }
        }
    }

    private function getOutput(user:Object):String {
        var output:String = "";
        output += "id: " + user.id + "\n";
        output += "name: " + user.name + "\n";
        output += "city: " + user.city + "\n";
        output += "region: " + user.region + "\n";
        output += "postalcode: " + user.postalcode + "\n";
        output += "country: " + user.country + "\n";
        output += "hometown: " + user.hometown + "\n";
        output += "gender: " + user.gender + "\n";
        output += "culture: " + user.culture + "\n";
        output += "maritalStatus: " + user.maritalStatus + "\n";
        output += "headline: " + user.headline + "\n";
        output += "occupation: " + user.occupation + "\n";
        output += "desireToMeet: " + user.desireToMeet + "\n";
        output += "interests: " + user.interests + "\n";
        output += "music: " + user.music + "\n";
        output += "movies: " + user.movies + "\n";
        output += "television: " + user.television + "\n";
        output += "books: " + user.books + "\n";
        output += "heroes: " + user.heroes + "\n";
        output += "zodiacSign: " + user.zodiacSign + "\n";
        output += "mood: " + user.mood + "\n";
        output += "status: " + user.status + "\n";
        output += "thumbnailUrl: " + user.thumbnailUrl + "\n";
        return output;
    }

    public function setSaveSoundResult(returnData:Object):void {
        if (returnData.result) {
            if (returnData.result.success) {
                message.text = "saveSound success!";
            } else {
                message.text = returnData.result.message;
            }
        } else {
            message.text = "setSaveSoundResult error! result not set.";
        }
    }

    public function setAddSoundResult(returnData:Object):void {
        if (returnData.result) {
            if (returnData.result.success) {
                message.text = "addSound success!";
            } else {
                message.text = returnData.result.message;
            }
        } else {
            message.text = "setAddSoundResult error! result not set.";
        }
    }

    public function setClearSoundResult(returnData:Object):void {
        if (returnData.result) {
            if (returnData.result.success) {
                message.text = "clearSound success!";
            } else {
                message.text = returnData.result.message;
            }
        } else {
            message.text = "setClearSoundResult error! result not set.";
        }
    }

    public function setGetSoundCollectionResult(returnData:Object):void {
        var sounds:Array = returnData.sounds;
        if (returnData.result) {
            if (returnData.result.success) {
                message.text = "getSoundCollection success!";
                message.text += sounds.toString();
            } else {
                message.text = returnData.result.message;
            }
        } else {
            message.text = "getSoundCollection error! result not set.";
        }
    }

    private function resetForm(event:MouseEvent):void {
//        p1.visible = true;
//        p2.visible = false;
        returnDataArea.text = "";
        thumbnail.source ="";
    }

    private function sendMessage(event:MouseEvent):void {
        var dataType:String = dataType.selectedItem.label;

        switch (dataType) {
            case "Viewer" :
                ExternalInterface.call("getViewer");
                break;
            case "Owner" :
                ExternalInterface.call("getOwner");
                break;
            case "Test" :
                ExternalInterface.call("test");
                break;
        }
    }

    private function saveSound(event:MouseEvent):void {
        message.text = "";
        ExternalInterface.call("saveSound", foo.text);
    }

    private function addSound(event:MouseEvent):void {
        message.text = "";
        ExternalInterface.call("addSound", 11111, bar.text);
    }

    private function clearSound(event:MouseEvent):void {
        message.text = "";
        ExternalInterface.call("clearSound");
    }

    private function getSoundCollection(event:MouseEvent):void {
        message.text = "";
        ExternalInterface.call("getSoundCollection");
    }
    ]]>
    </mx:Script>
    <mx:HBox x="82" y="5" width="100%">
        <mx:Panel name="p1" id="p1" visible="true">
            <mx:Form width="100%" height="100%">
                <mx:FormItem label="Data Type" >
                    <mx:ComboBox dataProvider="{dataTypes}" id="dataType" width="150"/>
                </mx:FormItem>
                <mx:FormItem label="Request Data">
                    <mx:Button id="btnSend" label="Request"/>
                </mx:FormItem>
                <mx:ControlBar>
                    <mx:Label id="labelStatus" text=""/>
                </mx:ControlBar>
                <mx:FormItem label="Save Sound">
                    <mx:Button id="btnSave" label="Save"/>
                </mx:FormItem>
                <mx:FormItem label="Add Sound">
                    <mx:Button id="btnAdd" label="Add"/>
                </mx:FormItem>
                <mx:FormItem label="Sound Collection">
                    <mx:Button id="btnSoundCollection" label="Collection"/>
                </mx:FormItem>
                <mx:FormItem label="Clear Sound">
                    <mx:Button id="btnClear" label="Clear"/>
                </mx:FormItem>
                <mx:FormItem label="Message">
                    <mx:TextArea id="message" height ="150"/>
                </mx:FormItem>
                <mx:FormItem label="SoundParam">
                    <mx:TextArea id="foo"/>
                </mx:FormItem>
                <mx:FormItem label="ViewerId to Add">
                    <mx:TextArea id="bar"/>
                </mx:FormItem>
            </mx:Form>
        </mx:Panel>
        <mx:Panel name="p2" id="p2" visible="true" height="100%">
            <mx:Form width="100%" height="100%">
                <mx:FormItem height="100%">
                    <mx:Grid>
                        <mx:GridRow width="100%" height="100%">
                            <mx:GridItem width="100%" height="100%">
                                <mx:Image id="thumbnail" />
                            </mx:GridItem>
                            <mx:GridItem width="100%" height="100%">
                                <mx:TextArea name="returnDataArea" id="returnDataArea" width="300" height="240"/>
                            </mx:GridItem>
                        </mx:GridRow>
                    </mx:Grid>
                </mx:FormItem>
                <mx:FormItem>
                    <mx:Button id="btnReset" label="Reset Form" />
                </mx:FormItem>
            </mx:Form>
        </mx:Panel>
    </mx:HBox>
</mx:Application>
