<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
    layout="absolute"
    creationComplete="onCreationComplete()"
    backgroundAlpha="0" backgroundColor="#FFFFFF">

    <mx:Script>
    <![CDATA[
    import mx.containers.Panel;
    import mx.controls.Alert;
    import flash.external.*;
    import mx.collections.ArrayCollection;

    [Bindable]
    public var dataTypes:ArrayCollection = new ArrayCollection([
        {label:"Owner", data:1},
        {label:"Viewer", data:2},
        {label:"Test", data:3}
    ]);

    private function onCreationComplete():void {
        //allow cross domain calls
        //flash.system.Security.allowDomain("api.msappspace.com");
        flash.system.Security.allowDomain("*");

        if(ExternalInterface.available) {
            try {
                //Set up Javascript to Actionscript calls
                ExternalInterface.addCallback("initResultHandler", initResultHandler);
                ExternalInterface.addCallback("getViewerResultHandler", getViewerResultHandler);
                ExternalInterface.addCallback("getOwnerResultHandler", getOwnerResultHandler);
                ExternalInterface.addCallback("saveSoundResultHandler", saveSoundResultHandler);
                ExternalInterface.addCallback("addSoundResultHandler", addSoundResultHandler);
                ExternalInterface.addCallback("clearSoundCollectionResultHandler", clearSoundCollectionResultHandler);
                ExternalInterface.addCallback("getSoundCollectionResultHandler", getSoundCollectionResultHandler);

                ExternalInterface.call("init");
            } catch (error:Error) {
                Alert.show("an error occurred: " + error.message + "\n");
            }
        }
        //Setup button events
        btnSend.addEventListener(MouseEvent.CLICK, sendMessage);
        btnReset.addEventListener(MouseEvent.CLICK, resetForm);
        btnSave.addEventListener(MouseEvent.CLICK, saveSound);
        btnAdd.addEventListener(MouseEvent.CLICK, addSound);
        btnClear.addEventListener(MouseEvent.CLICK, clearSoundCollection);
        btnSoundCollection.addEventListener(MouseEvent.CLICK, getSoundCollection);
    }

    public function initResultHandler(response:Object):void {
        //ExternalInterface.call("getOwner");
        messageArea.text = "init ok.";
    }

    public function getViewerResultHandler(response:Object):void {
        if (!response.result) {
            messageArea.text += "unknown error.\n";
            return;
        }
        if (!response.result.success) {
            messageArea.text += response.result.message  + "\n";
            return;
        }
        if (!response.viewer) {
            messageArea.text += "viewer not found.\n";
            return;
        }
        returnDataArea.text = "Viewer:\n" + getOutput(response.viewer);
        returnDataArea.text = "hasOwnerSound: " + response.viewer.hasOwnerSound + "\n";
        thumbnail.source =  response.viewer.thumbnailUrl;
        messageArea.text += "viewer found.\n";
    }

    public function getOwnerResultHandler(response:Object):void {
        if (!response.result) {
            messageArea.text += "unknown error.\n";
            return;
        }
        if (!response.result.success) {
            messageArea.text += response.result.message + "\n";
            return;
        }
        if (!response.owner) {
            messageArea.text += "owner not found.\n";
            return;
        }
        returnDataArea.text = "Owner:\n" + getOutput(response.owner);
        thumbnail.source =  response.owner.thumbnailUrl;
        messageArea.text += "owner found.\n";
        if (response.owner.sound) {
            returnDataArea.text += "sound: data:" + response.owner.sound.data + "\n";
            returnDataArea.text += "sound: timestamp:" + response.owner.sound.timestamp + "\n";
            messageArea.text += "sound found.\n";
        } else {
            returnDataArea.text += "sound: data: n/a\n";
            returnDataArea.text += "sound: timestamp: n/a\n";
            messageArea.text += "no sound found.\n";
        }
    }

    private function getOutput(user:Object):String {
        var output:String = "";
        output += "id: " + user.id + "\n";
        output += "name: " + user.name + "\n";
        output += "age: " + user.age + "\n";
        output += "gender: " + user.gender + "\n";
        output += "aboutMe: " + user.aboutMe + "\n";
        output += "jobs: " + user.jobs + "\n";
        output += "lookingFor: " + user.desireToMeet + "\n";
        output += "interests: " + user.interests + "\n";
        output += "music: " + user.music + "\n";
        output += "movies: " + user.movies + "\n";
        output += "tvShows: " + user.tvShows + "\n";
        output += "books: " + user.books + "\n";
        output += "heroes: " + user.heroes + "\n";
        output += "status: " + user.status + "\n";
        output += "thumbnailUrl: " + user.thumbnailUrl + "\n";

//        output += "addresses: " + user.addresses + "\n";
//        output += "currentLocation: " + user.currentLocation + "\n";
//        output += "city: " + user.city + "\n";
//        output += "region: " + user.region + "\n";
//        output += "postalcode: " + user.postalcode + "\n";
//        output += "country: " + user.country + "\n";
//        output += "hometown: " + user.hometown + "\n";
//        output += "maritalStatus: " + user.maritalStatus + "\n";
//        output += "headline: " + user.headline + "\n";
//        output += "culture: " + user.culture + "\n";
//        output += "zodiacSign: " + user.zodiacSign + "\n";
//        output += "mood: " + user.mood + "\n";
        return output;
    }

    public function saveSoundResultHandler(response:Object):void {
        if (response.result) {
            if (response.result.success) {
                messageArea.text += "saveSound success!\n";
            } else {
                messageArea.text += response.result.message + "\n";
            }
        } else {
            messageArea.text += "saveSoundResultHandler error! result not set.\n";
        }
    }

    public function addSoundResultHandler(response:Object):void {
        if (response.result) {
            if (response.result.success) {
                messageArea.text += "addSound success!\n";
            } else {
                messageArea.text += response.result.message + "\n";
            }
        } else {
            messageArea.text += "addSoundResultHandler error! result not set.\n";
        }
    }

    public function clearSoundCollectionResultHandler(response:Object):void {
        if (response.result) {
            if (response.result.success) {
                messageArea.text += "clearSoundCollection success!\n";
            } else {
                messageArea.text += response.result.message + "\n";
            }
        } else {
            messageArea.text += "clearSoundCollectionResultHandler error! result not set.\n";
        }
    }

    public function getSoundCollectionResultHandler(response:Object):void {
        var sounds:Array = response.sounds;
        if (response.result) {
            if (response.result.success) {
                messageArea.text += "getSoundCollection success!\n";
                messageArea.text += sounds.toString() + "\n";
            } else {
                messageArea.text += response.result.message + "\n";
            }
        } else {
            messageArea.text += "getSoundCollectionResultHandler error! result not set.\n";
        }
    }

    private function resetForm(event:MouseEvent):void {
        messageArea.text = "";
        returnDataArea.text = "";
        thumbnail.source ="";
    }

    private function sendMessage(event:MouseEvent):void {
        var dataType:String = dataType.selectedItem.label;

        switch (dataType) {
            case "Viewer" :
                ExternalInterface.call("getViewer");
                break;
            case "Owner" :
                ExternalInterface.call("getOwner");
                break;
            case "Test" :
                ExternalInterface.call("test");
                break;
        }
    }

    private function saveSound(event:MouseEvent):void {
        messageArea.text = "";
        var param:Object = {
            data: soundParam.text,
            timestamp: new Date().getTime()
        };
        ExternalInterface.call("saveSound", param);
    }

    private function addSound(event:MouseEvent):void {
        messageArea.text = "";
        ExternalInterface.call("addSound", ownerIdToAdd.text);
    }

    private function clearSoundCollection(event:MouseEvent):void {
        messageArea.text = "";
        ExternalInterface.call("clearSoundCollection");
    }

    private function getSoundCollection(event:MouseEvent):void {
        messageArea.text = "";
        ExternalInterface.call("getSoundCollection");
    }
    ]]>
    </mx:Script>
    <mx:HBox x="82" y="5" width="100%">
        <mx:Panel name="p1" id="p1" visible="true">
            <mx:Form width="100%" height="100%">
                <mx:FormItem label="Data Type" >
                    <mx:ComboBox dataProvider="{dataTypes}" id="dataType" width="150"/>
                </mx:FormItem>
                <mx:FormItem label="Request Data">
                    <mx:Button id="btnSend" label="Request"/>
                </mx:FormItem>
                <mx:FormItem label="Save Sound">
                    <mx:Button id="btnSave" label="Save"/>
                </mx:FormItem>
                <mx:FormItem label="Add Sound">
                    <mx:Button id="btnAdd" label="Add"/>
                </mx:FormItem>
                <mx:FormItem label="Sound Collection">
                    <mx:Button id="btnSoundCollection" label="Collection"/>
                </mx:FormItem>
                <mx:FormItem label="Clear Sound">
                    <mx:Button id="btnClear" label="Clear"/>
                </mx:FormItem>
                <mx:FormItem label="SoundParam">
                    <mx:TextArea id="soundParam"/>
                </mx:FormItem>
                <mx:FormItem label="OwnerId to Add">
                    <mx:TextArea id="ownerIdToAdd"/>
                </mx:FormItem>
                <mx:TextArea id="messageArea" width="300" height="150"/>
            </mx:Form>
        </mx:Panel>
        <mx:Panel name="p2" id="p2" visible="true" height="100%">
            <mx:Form width="100%" height="100%">
                <mx:FormItem height="100%">
                    <mx:Grid>
                        <mx:GridRow width="100%" height="100%">
                            <mx:GridItem width="100%" height="100%">
                                <mx:Image id="thumbnail" />
                            </mx:GridItem>
                        </mx:GridRow>
                        <mx:GridRow width="100%" height="100%">
                            <mx:GridItem width="100%" height="100%">
                                <mx:TextArea name="returnDataArea" id="returnDataArea" width="250" height="400"/>
                            </mx:GridItem>
                        </mx:GridRow>
                    </mx:Grid>
                </mx:FormItem>
                <mx:FormItem>
                    <mx:Button id="btnReset" label="Reset Form" />
                </mx:FormItem>
            </mx:Form>
        </mx:Panel>
    </mx:HBox>
</mx:Application>
