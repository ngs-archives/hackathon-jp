<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs 
    title="BBSっぽいSample">
    <Require feature="opensocial-0.8"/>
    <Require feature="setprefs" /> 
    <Require feature="flash" /> 
    </ModulePrefs>
  <UserPref 
    name="counter" 
    default_value="0" 
    datatype="hidden"/>
<Content type="html">
<![CDATA[ 
<form name="form1">
	<input type="hidden" name="owner_id">
	<input type="hidden" name="owner_name">
	<input type="hidden" name="viewer_id">

	Name<input type="text" name="viewer_name"><br />
	SwfURL<input type="text" name="swf_url"><br />
	SwfWidth<input type="text" name="swf_width"><br />
	SwfHeight<input type="text" name="swf_height"><br />

	<input type="hidden" name="MAX_FILE_SIZE" value="65536"> 
	<input type="file" name="tmp" accept="image/jpeg,image/pjpeg,image/gif" size="96">
<div id="thumb"></div>

	Comment<br />
	<textarea name="comment"></textarea><br />
	<input type="button" value="submit" onClick="userPost('regist');">
	<input type="button" value="swfShow" onClick="swfShow();">
	<input type="button" value="getJson" onClick="getJson();">
	<input type="button" value="postImg" onClick="imgPost();">
	<input type="button" value="getThumb" onClick="getThumb();">
</form>
<div id="swf"></div>
<div id="content_div"></div>


<script type="text/javascript">
<!--

function getThumb(){
	// (1) リクエストのコンテナを作成する
	var req = opensocial.newDataRequest();

	// (2) プロフィール情報を取得するためのリクエストを追加
	req.add(req.newFetchPersonRequest(opensocial.IdSpec.PersonId.VIEWER), "viewer");
	// (3) リクエストを送信し、非同期処理
	req.send(function(resp) {
		

			var viewer = resp.get("viewer").getData();
			document.getElementById('thumb').innerHTML = "<img src='"+viewer.getField(opensocial.Person.Field.THUMBNAIL_URL)+"'>";
	});
}



//JSON
function getJson(){
	var params = {};
	var url = "http://nakazoe.heteml.jp/opensocial/json.php";
	var postdata = "{Func:'swf'}";

	params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;
	params[gadgets.io.RequestParameters.POST_DATA] = postdata;

	postdata = gadgets.io.encodeValues(postdata);
	params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
	gadgets.io.makeRequest(url, jsonResponse, params);
};
//Callback
function jsonResponse(obj) {  
	var json = obj.data;
alert(json.name);

};

//SWF表示
function swfShow(){
var param = {
		width : 360,
		height : 360
	}
	gadgets.flash.embedFlash(
		"http://hozo.hp.infoseek.co.jp/wc/wc.swf",
		document.getElementById("swf"),
		6,
		param
	);
}


//IMG POST送信
function imgPost(func){

	var ImgTemp = document.form1.tmp.value;

	var data = {ImgTemp:ImgTemp,Func:"up"};

	var url = "http://nakazoe.heteml.jp/opensocial/show.php";
	makeIMGPOSTRequest(url,data)
};

//Requestの生成
function makeIMGPOSTRequest(url, postdata) {
	var params = {};
	postdata = gadgets.io.encodeValues(postdata);

	params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;
	params[gadgets.io.RequestParameters.POST_DATA] = postdata;
	params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.TEXT;

	gadgets.io.makeRequest(url, imgRespons, params);
};
function imgRespons(obj) {  
	//obj.text contains the text of the page that was requested
	var str = obj.text;
	document.getElementById('content_div').innerHTML = str;
};


//POST送信
function userPost(func){

	var OwnerId = document.form1.owner_id.value;
	var OwnerName = htmlspecialchars(document.form1.owner_name.value);
	var ViewerId = document.form1.viewer_id.value;
	var ViewerName = document.form1.viewer_name.value;
	var Comment = document.form1.comment.value;
	var SwfUrl = document.form1.swf_url.value;
	var SwfWidth = document.form1.swf_width.value;
	var SwfHeight = document.form1.swf_height.value;

	var data = {OwnerId:OwnerId,OwnerName:OwnerName,ViewerId:ViewerId,ViewerName:ViewerName,Comment:Comment,SwfUrl:SwfUrl,SwfWidth:SwfWidth,SwfHeight:SwfHeight,Func:func};

	var url = "http://nakazoe.heteml.jp/opensocial/show.php";
	makePOSTRequest(url,data)
};

//Requestの生成
function makePOSTRequest(url, postdata) {
	var params = {};
	postdata = gadgets.io.encodeValues(postdata);

	params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;
	params[gadgets.io.RequestParameters.POST_DATA] = postdata;
	params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.TEXT;

	gadgets.io.makeRequest(url, response, params);
};
//Callback
function response(obj) {  
	//obj.text contains the text of the page that was requested
	var str = obj.text;
	document.getElementById('content_div').innerHTML = str;
};

//Owner,ViewerのID,Nameの取得
function OwnerSet() {
	var req = opensocial.newDataRequest();
	req.add(req.newFetchPersonRequest(opensocial.IdSpec.PersonId.OWNER), "owner");
	req.send(function(resp) {

	var owner  = resp.get("owner").getData();
	document.form1.owner_id.value =		owner.getId();
	document.form1.owner_name.value =	owner.getDisplayName();
	userPost("show");
	ViewerSet();
	});
};
function ViewerSet() {
	// (1) リクエストのコンテナを作成する
	var req = opensocial.newDataRequest();

	// (2) プロフィール情報を取得するためのリクエストを追加
	req.add(req.newFetchPersonRequest(opensocial.IdSpec.PersonId.VIEWER), "viewer");
	// (3) リクエストを送信し、非同期処理
	req.send(function(resp) {
//		if(resp.hadError){
//			alert(resp.getErrorMessage());

			var viewer = resp.get("viewer").getData();
			document.form1.viewer_id.value =	viewer.getId();
			document.form1.viewer_name.value =	viewer.getDisplayName();
	});
	
};

function htmlspecialchars(ch) {
    ch = ch.replace(/&/g,"&amp;") ;
    ch = ch.replace(/"/g,"&quot;") ;
    ch = ch.replace(/'/g,"&#039;") ;
    ch = ch.replace(/</g,"&lt;") ;
    ch = ch.replace(/>/g,"&gt;") ;
    return ch ;
};

//onLoad
gadgets.util.registerOnLoadHandler(OwnerSet);
-->
</script>


]]> 
	</Content>
</Module>