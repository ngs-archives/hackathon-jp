<?xml version="1.0" encoding="UTF-8" ?>
<Module>
	
<ModulePrefs title="みんなのMoSoトラベル" description="写真を使って行った気になるガジェットです。">
	<Require feature="opensocial-0.8"/>
	<Require feature="dynamic-height" />
	
	<Optional feature="content-rewrite">
		<Param name="exclude-urls"></Param>
		<Param name="exclude-urls">.*</Param>
		<Param name="include-tags"></Param>
	</Optional>
	
</ModulePrefs>

<Content type="html" view="home,profile,canvas">
<![CDATA[
<link href="http://chii8n.googlecode.com/svn/trunk/moso/jquery.rating.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=true"></script>
<script type="text/javascript" src="http://opensocial-jquery.googlecode.com/svn/trunk/features/opensocial-jquery/opensocial-jquery.min.js"></script>
<script type="text/javascript" src="http://files.getdropbox.com/u/647714/moso/mosoTest/jquery.inc-5.js"></script>
<script type="text/javascript" src="http://chii8n.googlecode.com/svn/trunk/moso/jquery.rating.js"></script>
<script type="text/javascript" src="http://chii8n.googlecode.com/svn/trunk/moso/config.js"></script>
<script type="text/javascript">
//外部ホストへフォームデータを送信する

function testCreate(){
	var hostUserID={};
	//オーナーの会員IDをリクエストする
	var req=opensocial.newDataRequest();
	req.add(req.newFetchPersonRequest(opensocial.IdSpec.PersonId.OWNER),"owner");
	req.send(function(data){
		if(data.hadError()){
			var msg = data.getErrorMessage();
			console.error(msg);
		}else{
			var owner=data.get("owner").getData();
			hostUserID=owner.getId();
			//console.info(hostUserID);

			//フォーム各要素のデータを変数に格納
			var url = HOST_URL + '/locations';
			var post_params = {
					setX: 125,
					setY: 125,
					name: "テスト名前",
					address: "テスト住所",
					setPhoto: "http://tests",
					comment: "テストコメント",
					kinds: 0,
					rating_number: 3,
					rating_people: 1,
					mixi_id: hostUserID
			};

			var opt_params = {};
			//DBへアクセス
			opt_params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;
			opt_params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
			opt_params[gadgets.io.RequestParameters.REFRESH_INTERVAL] = 0;
			opt_params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.NONE;
			opt_params[gadgets.io.RequestParameters.POST_DATA]     = gadgets.io.encodeValues(post_params)

			gadgets.io.makeRequest(url, function(response){
			},opt_params);
		}
	});
}

function postRating(photoId, point) {
    var url = HOST_URL + '/photos/rating_update';
    var params = {};
    params.photo_id = photoId;
    params.rating_number = point;
    
    params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;
    params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
    params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.NONE;
    params[gadgets.io.RequestParameters.REFRESH_INTERVAL] = 0;
	params[gadgets.io.RequestParameters.POST_DATA] = gadgets.io.encodeValues(params);    

    gadgets.io.makeRequest(url, function(response) {
        var transport_errors = response.errors;
        if (transport_errors.length) {
            alert('Transport Error' + Object.toJSON(transport_errors));
            return;
        }
        
        var result = response.data;
        
        if (result.errors) {
            console.log('Application Error');
            console.log(result.errors);
        }
        
        $("#photoRating .finished").css({'display':'block'});
    }, params);
}

var host ={

		init : function(){
			//送信をクリックしたらデータをサーバーへ送信する
							//フォーム各要素のデータを変数に格納
							var url = HOST_URL + '/locations';
							var post_params = {
								lng: $("#setX").val(),
								lat: $("#setY").val(),
								name: $("#title").val(),
								//address: $(".address").val(),
								URL: $("#setPhoto").val(),
								comment: $("#comment").val(),
								kinds: $("#kinds").val(),
								mixi_id: moso.owner.getId(),
								rating_number: $("#rating").val(),
								rating_people : 1
							};

//							var post_params = {
//										setX: 125,
//										setY: 125,
//										name: "テスト名前",
//										address: "テスト住所",
//										setPhoto: "http://tests",
//										comment: "テストコメント",
//										kinds: 0,
//										rating_number: 3};

							var opt_params = {};
							//DBへアクセス
							opt_params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;
							opt_params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
							opt_params[gadgets.io.RequestParameters.REFRESH_INTERVAL] = 0;
							opt_params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.NONE;
							opt_params[gadgets.io.RequestParameters.POST_DATA]     = gadgets.io.encodeValues(post_params)

							gadgets.io.makeRequest(url, function(response){
								
							},opt_params);
						
						//外部サーバーへajax通信をおこなう
						$("#regi").html("登録完了しました！");
		},
		photo : function(){
			var url = HOST_URL + '/photos';
			var post_params = {
				location_id: location_id,
				url: $("#setPhoto").val(),
				comment: $("#comment").val(),
				mixi_id: moso.owner.getId(),
				rating_number: $("rating").val(),
				rating_people : 2
			};
			
			var opt_params = {};
			//DBへアクセス
			opt_params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;
			opt_params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
			opt_params[gadgets.io.RequestParameters.REFRESH_INTERVAL] = 0;
			opt_params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.NONE;
			opt_params[gadgets.io.RequestParameters.POST_DATA]     = gadgets.io.encodeValues(post_params)

			gadgets.io.makeRequest(url, function(response){
			
			},opt_params);
		}
}

$(function(){

});

var view = {
		map : {},
		userId : null,
		infoWindow : null,
		init : function() {
			view.buildMap()
			view.request();
			
			gadgets.window.adjustHeight(700);
		},
		buildMap : function() {
			var point = new google.maps.LatLng(36.03, 139.15);
			var myOptions = {
      			zoom: 5,
		      	center: point,
		      	scaleControl: true,
      			mapTypeId: google.maps.MapTypeId.ROADMAP
    		};
    		view.map = new google.maps.Map(document.getElementById("viewMap"), myOptions);

            //if (!moso.isOwner) return;
            
			//google.maps.event.addListener(view.map, 'rightclick', function(event) {
			google.maps.event.addListener(view.map, 'click', function(event) {
				if (event) {
					if (view.infoWindow) view.infoWindow.close();
				
					x = event.latLng.lng();
					y = event.latLng.lat();
					
					view.infoWindow = new google.maps.InfoWindow()
					view.infoWindow.set_position(event.latLng);
					var windowHtml = '<p><a href="javascript:void(0);" onclick="view.editPhoto(\''+ x +'\',\''+ y +'\');">このポイントに登録する</a></p>';
					view.infoWindow.set_content(windowHtml);
					view.infoWindow.open(view.map);
				}
			});
		},
		buildMarkers : function(result) {
console.log(result);		
            var photos = location.photos;
		    if (view.infoWindow) view.infoWindow.close();
			$.each(result, function(key, value) {
				var location = value.location;
			
				var point = new google.maps.LatLng(location.lat, location.lng);
				var marker = new google.maps.Marker();
				marker.set_position(point);
				
				var windowHtml = '<h2 class="mtb0"><img src="' + location.setPhoto + '" /></h2>';
				if (moso.isOwner) windowHtml += '<p class="txt12"><a href="javascript:void(0);" onclick="view.editPhoto(\''+ location.setX +'\',\''+ location.setY +'\');">このポイントに登録する</a></p>';
				google.maps.event.addListener(marker, 'click', function() {
				    view.viewPhoto();
				    
				    $("#photoRating .star1").rating({callback: function(value,link){
				        var photoId = $("#ratingPhotoId").val();
				        if (!photoId) return;
				        postRating(photoId, value)
				    }});
				    
					var infoWindow = new google.maps.InfoWindow()
					infoWindow.set_position(point);
					infoWindow.set_content(windowHtml);
					infoWindow.open(view.map);

					view.listRightPhoto(location);
				});		
				marker.set_clickable(true);
				marker.set_visible(true);
				marker.set_map(view.map);
			});
		
		},
		listRightPhoto : function(location) {
console.log(location);		
            var photos = location.photos;

			$("#latestPhoto .photo").html('<img src="' + location.photos[0].setPhoto + '" />');			
			$("#latestPhoto .comment").html('<div class="form_line">' + location.photos[0].comment + '</div>');
			document.getElementById("ratingPhotoId").value = location.photos[0].id;			
			
			$("#latestPhoto .area_name .place").html(location.name);
			$("#latestPhoto .area_name .address").html(location.address);

			var data = '<ul class="photos clears"></ul>';
			$("#viewPhotoList").html(data);

			$.each(photos, function(key, photo) {
				$("#viewPhotoList .photos").append($("<li></li>").html('<img class="photo" src="' + photo.url + '" />').click(function(){
					document.getElementById("ratingPhotoId").value = photo.id;
					$("#latestPhoto .photo").html('<img src="' + photo.url + '" />');			
					if (photo.comment) $("#latestPhoto .comment").html('<div class="form_line">' + photo.comment + '</div>');
				}));
				if (moso.isOwner) $("#viewRight .addButton").css({"display":"block"});
			});
			
			$("#rightViewEditButton").click(function(){ view.editPhoto(location.setX,location.setY); });
		},
		request : function(url) {
			var url = HOST_URL + '/locations';
			var params = {};
			
			params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;
			params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
			params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.NONE;
			params[gadgets.io.RequestParameters.REFRESH_INTERVAL] = 0;
			
			gadgets.io.makeRequest(url, function(response) {
				var transport_errors = response.errors;
				if (transport_errors.length) {
					alert('Transport Error' + Object.toJSON(transport_errors));
					return;
				}
				
				var result = response.data;
				
				if (result.errors) {
					console.log('Application Error');
					console.log(result.errors);
				}
				
				view.buildMarkers(result);
			}, params);
		},	
		editPhoto : function(x, y) {
			$("#editSection").css({ "display":"block" });
			$("#viewSection,#firstSection").css({ "display":"none" });
			
			document.getElementById("setX").value = x;
			document.getElementById("setY").value = y;
			
			albumView.requestAlbums();
			
			$("#photoRating .star1").rating({callback: function(value,link){
			    var photoId = $("#ratingPhotoId").val();
			    if (!photoId) return;
			    postRating(photoId, value)
			}});
		},
		viewPhoto : function() {
			$("#firstSection").css({ "display":"none" });
			$("#editSection").css({ "display":"block" });
			$("#viewSection").css({ "display":"none" });
			
			document.getElementById("setX").value = '';
			document.getElementById("setY").value = '';
		}
	};

var albumView = {

	AlbumsTitle : [],
	conf		: 0,
	requestAlbums : function() {
		var idspec_params = {};
		idspec_params[opensocial.IdSpec.Field.USER_ID] = opensocial.IdSpec.PersonId.OWNER;
		var idspec = opensocial.newIdSpec(idspec_params);
		var params = {};
		req = new opensocial.newDataRequest();
		req.add(req.newFetchAlbumsRequest(idspec, params), 'albums');
		req.send(albumView.onLoadAlbums);
		
	},
	onLoadAlbums : function(dataResponse){
		var albums = dataResponse.get('albums').getData();
		var i = 1;
		albums.each(function(album){
			albumView.listMediaItems(album.getField(opensocial.Album.Field.ID));
			albumView.AlbumsTitle.push([album.getField(opensocial.Album.Field.ID),album.getField(opensocial.Album.Field.TITLE),(album.getField(opensocial.Album.Field.THUMBNAIL_URL)) ? album.getField(opensocial.Album.Field.THUMBNAIL_URL) : null]);
		});
	},
	listMediaItems : function(albumId) {
		var idspec_params = {};
		idspec_params[opensocial.IdSpec.Field.USER_ID] = opensocial.IdSpec.PersonId.OWNER;
		var idspec = opensocial.newIdSpec(idspec_params);
		var req = new opensocial.newDataRequest();
		var params = {};
		req.add(req.newFetchMediaItemsRequest(idspec, albumId, params), 'mediaitems');
		req.send(albumView.onLoadMediaItems);
	},
	onLoadMediaItems : function(dataResponse) {
		var mediaitems = dataResponse.get('mediaitems').getData();
		var topflg = 0;
		var caption = "";
		
		var albumTop = albumView.getAlbumData(mediaitems);
		var data = '<ul id="album_'+albumTop[0]+'" class="photos clears">\n';
		data += '<li><span class="top"><img class="photo" src="'+((albumTop[2]) ? albumTop[2] : "http://img.mixi.jp/img/basic/common/noimage_photo240.gif")+'" /><br />'+albumTop[1]+'</span>\n';
		data += '<ul class="pics">';
		data += '<li class="back"><img src="http://mizoochi.com/apps/moso/images/return.png" alt="アルバム一覧へ戻る" title="アルバム一覧へ戻る" /></li>';
		
		mediaitems.each(function(mediaitem){
			data += '<li class="pic">';
			data += '<img class="photo" src="' + mediaitem.getField(opensocial.MediaItem.Field.THUMBNAIL_URL) + '" /><br />'+mediaitem.getField(opensocial.MediaItem.Field.DESCRIPTION)+'</li>\n';
		});
		
		data += '</ul>\n</li></ul>\n';
		$("#viewPhotoList").append(data);
		$(".photo").click(function(){
			if(!albumView.conf){
				var setID = $(this).parents()[2].id;
				$("#viewPhotoList ul li span.top").fadeOut(function(){
					$("ul#"+setID+" li span.back").fadeIn();
					$("ul#"+setID+" li ul.pics li:hidden").show("normal");
				});
				albumView.conf = 1;
			}
			$("#setPhoto").val($(this).attr("src"));
			$(".photo").css({ "border":"1px solid #EEE" });
			$(this).css({ "border":"2px solid #F00" });
		});
		$(".photo").hover(function(){
			if($(this).css("border")!="2px solid rgb(255, 0, 0)") $(this).css({ "border":"1px solid #E30" });
		},
		function(){
			if($(this).css("border")!="2px solid rgb(255, 0, 0)") $(this).css({ "border":"1px solid #EEE" });
		});
		$(".back").click(function(){
			if(albumView.conf){
				var setID = $(this).parents()[1].id;
				$("ul#"+setID+" li ul.pics li:visible").hide(function(){
					$("#viewPhotoList ul li span.top").fadeIn();
				});
				albumView.conf = 0;
			}
		});
	},
	getAlbumData : function(mediaitems){
		var albumID = "";
		mediaitems.each(function(mediaitem){
			var url = mediaitem.getField(opensocial.MediaItem.Field.URL);
			var path = url.split("/")[7];
			albumID = path.split("_")[0];
		});
		for(var i=0;i<albumView.AlbumsTitle.length;i++){
			if(albumView.AlbumsTitle[i][0]==albumID){
				var data = [albumID,albumView.AlbumsTitle[i][1],albumView.AlbumsTitle[i][2]];
				break;
			}
		}
		return (data) ? data : null;
	}
}
var moso = {
	init : function(){
		moso.whois();
		view.init();
	},
	whois : function(){
		var req = opensocial.newDataRequest(); 
			req.add(req.newFetchPersonRequest(opensocial.IdSpec.PersonId.VIEWER), "viewer"); 
			req.add(req.newFetchPersonRequest(opensocial.IdSpec.PersonId.OWNER), "owner"); 
			req.send(function(data){
				moso.viewer = data.get("viewer").getData();
				moso.owner = data.get("owner").getData();
				//if(moso.viewer.isOwner()){
				if(moso.viewer.getId() == moso.owner.getId()){
					moso.isOwner=1;
					moso.isViewer=0;
				}else{
					moso.isOwner=0;
					moso.isViewer=1;
				}
			});
	},
	profileInit : function(){
		
	},
	homeInit : function(){
		
	}
}

var htmlInit = function (url,initializer){
	return function(){
			initializer();
	}
}
moso.homeInit = htmlInit(HOME_HTML_URL);
moso.profileInit = htmlInit(PROFILE_HTML_URL);
moso.canvasInit = htmlInit(CANVAS_HTML_URL, moso.init);
</script>
]]>
</Content>

<Content type="html" view="home">
<![CDATA[
<div id='base' />
<script type="text/javascript">
	gadgets.util.registerOnLoadHandler(moso.homeInit);
</script>
]]>
</Content>

<Content type="html" view="profile">
<![CDATA[
<div id='base' />
<script type="text/javascript">
	gadgets.util.registerOnLoadHandler(moso.profileInit);
</script>
]]>
</Content>

<Content type="html" view="canvas">
<![CDATA[
	<style type="text/css">
	#viewer					{ padding:10px; }
	#photoTitle,#mapTitle	{ font-size:14px; padding:3px; border-bottom:1px solid #CCC; }
	#comment				{ width:500px; height:80px; }
	#map					{ width:800px; height:300px; }
	#viewMap				{ width:500px; height:600px; float: left; }
	#viewRight				{ width:400px; height:600px; float: right;}
		
	#viewPhotoList ul.photos					{ list-style:none; float:left; padding:0; margin:0; }
	#viewPhotoList ul.photos li					{ display:inline; float:left; background:#FFF; font-size:12px; margin:0 0 5px 0; }
	#viewPhotoList ul.photos li img				{ cursor:pointer; width:60px; border:1px solid #EEE; padding:2px; margin:0 5px 2px 0; }
	
	#viewPhotoList ul.photos li ul.pics						{ list-style:none; float:left; margin:0; padding:0; }
	#viewPhotoList ul.photos li ul.pics li					{ display:inline; }
	#viewPhotoList ul.photos li	ul.pics li.back				{ display:none; }
	#viewPhotoList ul.photos li	ul.pics li.back img			{ width:48px; border:none; }
	#viewPhotoList ul.photos li ul.pics li.pic				{ display:none; float:left; width:65px; background:#FFF; margin:0 5px 5px 0; font-size:12px; text-align:center; }
	#viewPhotoList ul.photos li ul.pics li.pic img			{ cursor:pointer; width:60px; border:1px solid #EEE; padding:2px; }
	
	#sendArea				{ padding:5px; margin-top:10px; text-align:center; padding:5px; background:#EEE; }
	
	.mtb0					{ margin:0; padding:0; }
	.mb10					{ margin-bottom:10px; }
	.txt12					{ font-size:12px; }
	.memo					{ font-size:10px; color: #666; }
	.clears:after			{ content:"."; display:block; height:0; clear:both; visibility:hidden; }
	.clears					{ display:inline-table; zoom:100%; }
	/* macIE \*/
	* html .clears { height: 1%; }
	.clears { display: block; }
	/* macIE */	
	
#viewMap { width: 540px; float: left; padding-right: 10px; }
#viewRight { width: 350px; float: left; vertical-align: top; }
.area_name { list-style-type: none; margin: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 10px; padding-left: 0px; }
.place { padding-bottom: 5px; font-size: 1.2em; font-weight: bold; }
.viewPhotoList td { padding-right: 6px; padding-bottom: 5px; }
.pageing_area { text-align: center; padding-bottom: 10px; float: left; width: 350px; padding-top: 2px; }
.pageing_area li { list-style-type: none; float: left; height: 20px; text-align: center; vertical-align: middle; }
.pageing_area a { display: block; background-color: #ffcc99; height: 20px; text-decoration: none; vertical-align:middle; margin: 0px; font-size: 0.9em; text-align: center; width: 20px; }
.pageing_area a:hover { background-color: #FF9966; }
.coment_area { padding:0; margin:10px 0; }
.coment_area li { list-style-type: none; display:inline; vertical-align: middle; }
.form_line { border:2px solid #FF6600; width: 330px;}
#editSection	{ padding:0 0 0 10px; }
	</style>
<script type="text/javascript">
	gadgets.util.registerOnLoadHandler(moso.canvasInit);
</script>

	<div id='viewer'>
		<h1><img src="http://files.getdropbox.com/u/647714/moso/mosoTest/images/moso_map.jpg" alt="地図"></h1>

		<div id="viewMap"></div>
		<div id="firstSection" class="txt12">ポインタをクリックしてください。</div>
		<div id="viewRight">
			<div id="editSection" style="display:none">
				<div id="latestPhoto">
					
					<h2 class="txt12 mb10">タイトル</h2>
					<input type="text" id="title" value="" style="width:300px; padding:2px;" />
					<p id="photo_select"></p>
					
					<div id="viewPhotoList" class="clears"></div>
					
					<h2><img src="http://files.getdropbox.com/u/647714/moso/mosoTest/images/comment.gif" alt="この場所にコメント" width="140" height="30"></h2>
					<textarea class="comment" style="width:300px; height:100px; padding:2px;"></textarea>
					
					<div id="photoRating" class="clears">
                        <input name="star1" type="radio" class="star1" value="1" />
                        <input name="star1" type="radio" class="star1" value="2" />
                        <input name="star1" type="radio" class="star1" value="3" />
                        <input name="star1" type="radio" class="star1" value="4" />
                        <input name="star1" type="radio" class="star1" value="5" />
     					<span class="finished" style="display:none">評価しました！</span>
                    </div>
					<ul class="coment_area mb10 txt12">
						<li>
							<input name="radio" type="radio" id="radio" value="radio">
							行った！</li>
						<li>
							<input type="radio" name="radio" id="radio2" value="radio">
							行きたい！</li>
					</ul>
					
					<div>
						<input type="hidden" id="setX" name="setX" value="" />
						<input type="hidden" id="setY" name="setY" value="" />
					    <input type="hidden" name="ratingPhotoId" id="ratingPhotoId" value="3" />
					    <input type="hidden" id="setPhoto" value="" />
						<input type="submit" onClick="javascript:host.init();" name="button" id="button" value="登録" />
					</div>
					
					<!--<ul class="area_name">
						<li class="place">両国国技館</li>
						<li class="address">東京都墨田区横綱1−3−28東京都墨田区横綱1−3−28東京都墨田区横綱1−3−28</li>
					</ul>-->
					
				</div>
				
				<p class="addButton" style="display:none;clear:both;"><a href="javascript:void(0);" id="rightViewEditButton">このポイントに登録する</a></p>
			</div>
			
		</div>
	</div>

]]>
</Content>

</Module>